name: MDG CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  api-test-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - name: Install dependencies
        working-directory: ./api-test
        run: npm ci
      - name: Execute linters
        working-directory: ./api-test
        run: npm run lint

  backend-lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - uses: pmd/pmd-github-action@v1
        id: pmd
        with:
          version: '6.46.0'
          sourcePath: 'backend/src/main/java'
          analyzeModifiedFilesOnly: 'false'
          rulesets: 'rulesets/java/quickstart.xml,ruleset.xml'
      - name: Fail build if there a PMD violations
        if: steps.pmd.outputs.violations != 0
        run: exit 1
      - name: Run code duplicates detection
        working-directory: ./backend
        run: mvn --batch-mode --update-snapshots clean pmd:cpd-check
      - name: Run spotbugs checks
        working-directory: ./backend
        run: mvn --batch-mode --update-snapshots clean compile spotbugs:check
      - name: Test the tests with mutation
        working-directory: ./backend
        run: mvn --batch-mode --update-snapshots clean test-compile org.pitest:pitest-maven:mutationCoverage
#      - name: Build with Maven
#        working-directory: ./backend
#        run: mvn --batch-mode --update-snapshots clean package spring-boot:repackage

  api-test:
    runs-on: ubuntu-latest
    needs:
      - api-test-lint
      - backend-lint
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: mdg
          POSTGRES_PASSWORD: mdg
          POSTGRES_DB: mdg
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      elasticsearch:
        image: elasticsearch:7.6.12
        env:
          DISCOVERY.TYPE: single
          HTTP.PUBLISH_HOST: localhost
          HTTP.PUBLISH_PORT: 9200
        volumes:
          - ./dictionaries:/usr/share/elasticsearch/config/hunspell/
        ports:
          - 9200:9200
          - 9300:9300
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Install dependencies
        working-directory: ./api-test
        run: npm ci
      - name: Start MDG service
        working-directory: ./backend
        run: mvn --batch-mode --update-snapshots clean spring-boot:start
      - name: Stop MDG service
        if: always()
        working-directory: ./backend
        run: mvn spring-boot:stop