name: MDG CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  api-test-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - name: Install dependencies
        working-directory: ./api-test
        run: npm ci
      - name: Execute linters
        working-directory: ./api-test
        run: npm run lint

  backend-lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Run ktlint
        working-directory: ./backend
        run: mvn --batch-mode --update-snapshots clean compile ktlint:check
      - name: Unit tests
        working-directory: ./backend
        run: mvn --batch-mode --update-snapshots clean test-compile test

  api-test:
    runs-on: ubuntu-latest
    needs:
      - api-test-lint
      - backend-lint
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: mdg
          POSTGRES_PASSWORD: mdg
          POSTGRES_DB: mdg
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      elasticsearch:
        image: library/elasticsearch:7.16.1
        env:
          discovery.type: single-node
          http.publish_host: localhost
          http.publish_port: 9200
        ports:
          - 9200:9200
          - 9300:9300
        options: >-
          --health-cmd="curl http://localhost:9200/_cluster/health" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=10
    steps:
      - name: Dump docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v1
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Install dependencies
        working-directory: ./api-test
        run: npm ci
      - name: Start MDG service
        working-directory: ./backend
        run: mvn --batch-mode --update-snapshots clean compile spring-boot:start
      - name: Install API test dependencies
        working-directory: ./api-test
        run: npm ci
      - name: Run API tests
        working-directory: ./api-test
        run: npx gulp test
      - name: Stop MDG service
        if: always()
        working-directory: ./backend
        run: mvn spring-boot:stop

  mdg-build:
    runs-on: ubuntu-latest
    needs:
      - api-test
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Build with Maven
        working-directory: ./backend
        run: mvn --batch-mode --update-snapshots clean package spring-boot:repackage
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: backend/
          push: true
          tags: akashihi/mdg:master,akashihi/mdg:build-${{ github.run_number }}

  web-ui-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci
      - name: Codestyle
        working-directory: ./frontend
        run: npx prettier --check src/
      - name: Lint
        working-directory: ./frontend
        run: npx eslint src/js/**

  web-ui-build:
    runs-on: ubuntu-latest
    needs:
      - web-ui-lint
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci
      - name: Build package
        working-directory: ./frontend
        run: npm run build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: frontend/
          push: true
          tags: akashihi/mdg-web-ui:master,akashihi/mdg-web-ui:build-${{ github.run_number }}
